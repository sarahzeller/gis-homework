---
author: Sarah Zeller
title: Homework assignment 2
subtitle: Predicting building antennas in Tanzania
format:
  html: 
    toc: true
    mainfont: "Open Sans"
  pdf:
    toc: true
    number-sections: true
    mainfont: "Open Sans"
    include-in-header: 
      - text: |
          % f√ºr Alignment bei Kommastelle
          \usepackage{booktabs}
          \usepackage{siunitx}
          % alle Tabellen kleiner setzen
          \usepackage{etoolbox}
          \AtBeginEnvironment{longtable}{\footnotesize}
          \AtBeginEnvironment{tabular}{\footnotesize}
          \sisetup{group-separator       = {,}, % default: \, ("thinspace")
                  group-minimum-digits  = 3,   % default: 5
                  input-decimal-markers = {.}} % default: "{.,}"
execute:
  warning: false
  echo: false
bibliography: references.bib
editor: 
  markdown: 
    wrap: sentence
---

{{< pagebreak >}}

In this report, I'm having a look at cell phone towers in Tanzania, and estimate the probability of them being built in a certain area.
I first describe the region and variables.
I then show my regression and discuss them.

```{r}
#| label: install-packages
#| echo: false
#| output: false
#| warning: false
#| eval: false

if (!require("renv")) install.packages("renv", quiet = TRUE)
renv::hydrate()
if (!require("remotes")) install.packages("remotes", quiet = TRUE)
remotes::install_github("ropensci/rnaturalearthhires")
```

```{r}
#| label: load-packages
library(here)
library(archive)
library(sf)
library(mapview)
library(ggtext)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthhires)
library(osmdata)
library(nngeo)
library(modelsummary)
library(kableExtra)
library(labelled)
library(fixest)
library(stars)
library(raster)
library(dplyr)

library(showtext)
font_add_google("Open Sans")
showtext_auto()


here("run_regressions.R") |> source()
here("show_regressions.R") |> source()

```

```{r}
#| label: check-for-output-folder
if (!"output" %in% (here() |> list.files())) {
  here("output") |> dir.create()
}
```

# Project region

Before diving into the details, let's have a look at the region I am talking about.
@fig-locator-map shows where in the world our country of interest lies, while @fig-basemap shows some political details.
Tanzania lies in Eastern Africa, with its coast towards the Indian Ocean.
It is divided into 30 states.

```{r}
#| label: load-tanzania

tanzania_whole <- ne_countries(country = "United Republic of Tanzania",
                               scale = 10,
                               returnclass = "sf") 

tanzania <- ne_states(country = "United Republic of Tanzania",
                      returnclass = "sf") 

# write shape file and zip it
if (!("tanzania" %in% (here("output") |> list.files()))) {
  here("output/tanzania") |> dir.create()
  st_write(tanzania |> dplyr::select(name, geometry),
           here("output/tanzania/tanzania.shp")) |> try()
  
  zip(here("output/tanzania.zip"),
      here("output/tanzania"))
}

tanzania_vect <- here("output/tanzania/tanzania.shp") |> terra::vect()

```

```{r}
#| label: fig-locator-map
#| fig-cap: Research area is located in Tanzania.

world <- ne_countries(scale = "small",
                      returnclass = "sf") |> 
  st_cast('MULTILINESTRING') |> 
  st_cast('LINESTRING', do_split = TRUE) |> 
  mutate(npts = npts(geometry, by_feature = TRUE)) |> 
  st_cast('POLYGON')

ggplot() +
  geom_sf(data = world,
          aes(fill = sovereignt == "United Republic of Tanzania")) +
  scale_fill_manual(values = c("grey90",
                               "#1EB53A")) +
  guides(fill = FALSE) +
  coord_sf(crs = "+proj=ortho +lat_0=5 +lon_0=-10") +
  labs(caption = "Data: Natural Earth") +
  theme_void() +
  theme(text = element_text(family = "Open Sans"))

```

```{r}
#| label: fig-basemap
#| fig-cap: Political map of Tanzania

bounds <- st_bbox(tanzania_whole |> st_transform("ESRI:102022") |> st_buffer(100000))

africa <- ne_countries(continent = "africa",
                       scale = 10,
                       returnclass = "sf") |> 
  st_transform("ESRI:102022") |> 
  st_crop(bounds) |> 
  st_transform(4326)

basemap <- 
  ggplot() +
  geom_sf(data = africa,
          fill = "grey90",
          col = "grey80") +
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  geom_sf(data = tanzania,
          fill = "white",
          col = "grey70") +
  annotate("text",
           label = "Indian \nOcean",
           x = 40.5,
           y = -7,
           size = 3,
           lineheight = .75,
           colour = "grey40") +
  theme_void() +
  theme(panel.background = element_rect(fill = alpha("cornflowerblue", .4),
                                        colour = NA),
        plot.margin = margin(-10,0,0,0),
        text = element_text(family = "Open Sans")) +
  labs(caption = "Data: Natural Earth")

basemap
```

# Data

## Lightnings

I use the lightning data I used last time as a baseline grid.
Originally, it was a raster file, so this approach seems justified.

```{r}
#| label: load-lightning
here("input/lightnings_2014.rds") |> readRDS() |> 
  # only retain rasters for Tanzania
  st_intersection(tanzania_whole |> dplyr::select(geometry)) |> 
  dplyr::select(lightnings_mean_2014) |> 
  stars::st_rasterize() |> 
  write_stars(here("output/lightnings_tanzania.tif"))

lightning <- here("output/lightnings_tanzania.tif") |> 
  terra::rast()
```

```{r}
#| label: fig-lightning
#| fig-cap: Lightning frequencies in Tanzania

basemap +
  geom_sf(data = lightning,
          aes(fill = lightnings_mean_2014)) +
  labs(fill = "Average lightnings in 2014")

```


## Mobile antennas

```{r}
#| label: load-cellid
here("input/opencellid_tanzania.RData") |> load()

open_cell <- opencellid_tanzania |> 
    # convert to sf 
  st_as_sf(coords = c("lon", "lat"),
           crs = 4326) |> 
  filter(created_year <= 2022) |> # complete years
  mutate(across(c(created, updated), as_datetime)) |> 
  mutate(created_year = year(created) |> as.integer(),
         create_month = month(created)) |> 
  # order 2G/3G/4G
  mutate(radio = factor(radio, 
                        levels = c("GSM", "UMTS", "LTE"), 
                        ordered = TRUE))|> 
  # add state and subset for only antennas within known states
  st_intersection(tanzania |> transmute(state = name)) 

```

```{r}
#| label: fig-antennas
#| fig-cap: Mobile network antennas in Tanzania

basemap +
  geom_sf(data = open_cell |> st_jitter(),
          size = .8,
          alpha = .4) +
  labs(caption = "Data: Open Cell ID")
```



## Nighttime lights

I access nighttime lights from the file uploaded in OPAL.

```{r}
#| label: load-nightlights

nightlights <- here("input/DN_NTL_2021.tif") |> 
  raster::raster() |> 
  crop(tanzania_whole)

nightlights_sf <- nightlights |> 
  rasterToPolygons(dissolve = FALSE, na.rm = TRUE)

saveRDS(nightlights_sf,
        here("output/nightlights_sf.rds"))

nightlights_terra <- here("input/DN_NTL_2021.tif") |> 
  terra::rast() |> 
  crop(tanzania_whole)

```

```{r}
#| label: fig-nightlights-zonal
#| fig-cap: Nightlights (zonal)

nightlights_zonal <- zonal(nightlights_terra, tanzania_vect, fun = "mean", na.rm = TRUE) |> 
  cbind(tanzania |> dplyr::select(name)) |> 
  st_as_sf()

basemap + 
  geom_sf(data = nightlights_zonal,
          aes(fill = log(DN_NTL_2021))) +
  labs(fill = "Log night time lights")

```
```{r}
#| label nightlight-intersection

nightlight_intersection <- terra::intersect(nightlights, open_cell)
```





## Terrain ruggedness (TRI)

I download terrain ruggedness index (TRI) data from the [Harvard Dataverse](https://dataverse.harvard.edu/dataset.xhtml;jsessionid=f1ff7041fae2752fa64ab754bc0e?persistentId=doi%3A10.7910%2FDVN%2FWXUZBN&version=&q=&fileTypeGroupFacet=%22Document%22&fileAccess=&fileTag=&fileSortField=&fileSortOrder=#) [@carter].
Since the download link changes every time I added the downloaded folder to the input folder.

```{r}
#| label: load-tri
if(!(here("output/tri") |> exists())) {
  archive_extract(here("input/dataverse_files.zip"),
                here("output/tri"))
}

tri <- here("output/tri/Ruggedness_OneKilometerData/ruggedness1K.tif") |> 
  raster::raster()
tri_tanzania <- tri |> 
  raster::crop(tanzania_whole |> st_transform("ESRI:54010"))
```

```{r}
#| label: fig-zonal-tri
#| fig-cap: TRI for Tanzanian states

tri_zonal <- zonal(tri, 
                   tanzania_vect, 
                   fun = "mean",
                   na.rm = TRUE)
```
## Elevation

Elevation is obtained from NASA and downloaded through AppEEARS.
I uploaded a shape file of Tanzania to set the limits. 
I selected the SRTM Elevation (DEM), with gridcells that are about 90m.
The variable name is SRTMGL3_DEM.
I download it as GeoTiff, in the WGS84 projection.


```{r}
#| label: load-elevation

elevation <- here("output/elevation/gmted2010.shp") |> raster()
```


## Forestation


